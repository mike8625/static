{"version":3,"file":"js/record.a5d2bd96.js","mappings":"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","sources":["webpack://allsing/./src/components/SettingDialog.vue","webpack://allsing/./src/components/SettingDialog.vue?de02","webpack://allsing/./src/views/RecordView.vue","webpack://allsing/./src/views/RecordView.vue?5489"],"sourcesContent":["<template>\n  <van-dialog v-model:show=\"isVisible\" title=\"设置\" @close=\"onCloseDialog\">\n    <div class=\"c-setting-box\">\n      <van-cell title=\"歌词同步\" :value=\"store.lrcDelayTime\" />\n      <div class=\"c-setting-sliderbox\">\n        <van-slider\n          v-model=\"store.lrcDelayTime\"\n          @change=\"onlrcDelayChange\"\n          min=\"-2\"\n          max=\"2\"\n          step=\"0.1\"\n        />\n      </div>\n      <van-cell title=\"歌词编码\" />\n      <div class=\"c-setting-sliderbox\">\n        <van-radio-group v-model=\"store.lrcEncoding\" direction=\"horizontal\" @change=\"onLrcEncodingChange\">\n          <van-radio name=\"GBK\">GBK</van-radio>\n          <van-radio name=\"UTF-8\">UTF-8</van-radio>\n        </van-radio-group>\n      </div>   \n      <van-cell title=\"伴奏音量\" :value=\"store.banzouVolume*100\" />\n      <div class=\"c-setting-sliderbox\">\n        <van-slider\n          v-model=\"store.banzouVolume\"\n          @change=\"onBanzouVolumeChange\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n        />\n      </div>\n      <van-cell title=\"伴奏音调\" :value=\"store.banzouPitch * 10\" />\n      <div class=\"c-setting-sliderbox\">\n        <van-slider\n          v-model=\"store.banzouPitch\"\n          @change=\"onBanzouPitchChange\"\n          min=\"-1.1\"\n          max=\"1.1\"\n          step=\"0.1\"\n        />        \n      </div>         \n    </div>\n  </van-dialog>    \n</template>\n\n<script>\nimport useStore from \"../store\";\nimport { ref, watch } from \"vue\";\nexport default {\n  name: \"setting\",\n  props: {\n    visible: { type: Boolean, default: false },\n  },\n  emits: ['update:visible'],  \n  setup(props, { emit }) {\n    // 不把store写在这,初始化的好多值就报错\n    const store = useStore();\n    const isVisible = ref(props.visible);  \n  \n    // 监听props中的visible变化，更新isVisible  \n    watch(() => props.visible, (newVal) => {  \n      console.log(newVal);\n      isVisible.value = newVal;  \n    });   \n    // 如果需要从外部关闭对话框，可以定义一个方法来关闭 \n    let onCloseDialog = ()=> {  \n      console.log('关闭对话框');\n      emit('update:visible', false);  \n    } \n    return { store, isVisible, onCloseDialog };\n  },\n  methods: {\n    onlrcDelayChange (val) {\n      // 改歌词延迟只需要重新解析即可\n      this.store.parseLRC()\n    },\n    onLrcEncodingChange (val) {\n      // 改编码要重新读取文件 \n      this.store.readLrcText()\n    },\n    onBanzouVolumeChange(val) {\n      this.store.banzouVolume = val;\n    },\n    onBanzouPitchChange(val) {\n      this.store.banzouPitch = val;\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.c-setting-box {\n  text-align: left;\n}\n.c-setting-sliderbox {\n  padding: 16px 20px;\n}\n</style>\n","import { render } from \"./SettingDialog.vue?vue&type=template&id=521478c4&scoped=true\"\nimport script from \"./SettingDialog.vue?vue&type=script&lang=js\"\nexport * from \"./SettingDialog.vue?vue&type=script&lang=js\"\n\nimport \"./SettingDialog.vue?vue&type=style&index=0&id=521478c4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-521478c4\"]])\n\nexport default __exports__","<template>\n  <div class=\"container record\">\n    <van-nav-bar\n      :title=\"musicName\"\n      left-text=\"主页\"\n      @click-left=\"onBack()\"\n      right-text=\"设置\"\n      @click-right=\"onSetting\"\n    />\n    <audio\n      ref=\"audio\"\n      @timeupdate=\"onTimeUpdate\"\n      style=\"display: none\"\n      @ended=\"finish\"\n      @loadedmetadata=\"onLoadedMetadata\"\n    ></audio>\n    <div class=\"content c-text-center\">\n      <div class=\"c-lrcbox\">\n        <van-picker\n          @touchstart=\"onTouchStart\"\n          @touchend=\"onTouchEnd\"\n          :class=\"getCurClass()\"\n          :show-toolbar=\"false\"\n          :columns=\"store.parsedLyrics\"\n          @change=\"onChange\"\n          v-model=\"curVal\"\n          :readonly=\"countingdown || !playing\"\n          visible-option-num=\"8\"\n          option-height=\"8vh\"\n          swipe-duration=\"400\"\n        />\n        <div class=\"c-cd-dotbox\" v-show=\"countingdown\">\n          <i v-for=\"n in dotCount\" :key=\"n\" class=\"c-cd-dotitem\"></i>\n        </div>\n      </div>\n      <div class=\"c-ctrlbox\">\n        <div class=\"c-ctrlitem\" @click=\"onReplay\">\n          <van-icon name=\"revoke\" class=\"c-ctrlicon\" />\n          <span>重唱</span>\n        </div>\n        <div class=\"c-ctrlitem\">\n          <van-icon\n            v-show=\"playing\"\n            name=\"pause-circle-o\"\n            class=\"c-ctrlicon-big\"\n            @click=\"onPause\"\n          />\n          <van-icon\n            name=\"play-circle\"\n            class=\"c-ctrlicon-big\"\n            v-show=\"!playing\"\n            @click=\"onPlay\"\n          />\n        </div>\n        <div class=\"c-ctrlitem\" @click=\"onFinish\">\n          <van-icon name=\"passed\" class=\"c-ctrlicon\" />\n          <span>完成</span>\n        </div>\n      </div>\n      <div class=\"c-timebox\">\n        {{ util.convertTime(curTime) }} / {{ util.convertTime(store.banzouLength) }}\n      </div>\n      <div>\n        <van-button class=\"c-jump-btn\" plain type=\"default\" v-show=\"jumpShow\" @click=\"jumpToSing\">跳过前奏</van-button>\n      </div>\n        <canvas ref=\"waveBox\" width=\"375\" height=\"40\" class=\"c-re-wave\"></canvas>\n    </div>\n  </div>\n  <van-action-sheet\n    v-model:show=\"fShow\"\n    :actions=\"fShowList\"\n    @select=\"onFshowSelect\"\n    cancel-text=\"取消\"\n    close-on-click-action\n    @cancel=\"onFshowCancel\"\n  />\n  <SettingDialog v-model:visible=\"settingShow\"/>\n  <!-- <van-dialog v-model:show=\"settingShow\" title=\"设置\">\n    <div class=\"c-setting-box\">\n      <van-cell title=\"歌词同步\" :value=\"store.lrcDelayTime\" />\n      <div class=\"c-setting-sliderbox\">\n        <van-slider\n          v-model=\"store.lrcDelayTime\"\n          @change=\"onlrcDelayChange\"\n          min=\"-2\"\n          max=\"2\"\n          step=\"0.1\"\n        />\n      </div>\n    </div>\n  </van-dialog> -->\n</template>\n<script>\n// @ is an alias to /src\n\nimport useStore from \"../store\";\nimport { showConfirmDialog } from \"vant\";\nimport SettingDialog from \"../components/SettingDialog\";\nimport util from \"../common/js/util.js\";\n\n/* eslint-disable*/\n// import { showToast } from \"vant\";\nexport default {\n  name: \"RecordView\",\n  components: {SettingDialog},\n  setup() {\n    // 不把store写在这,初始化的好多值就报错\n    const store = useStore();\n    return { store, util };\n  },\n  data() {\n    return {\n      // 标题\n      musicName: \"\",\n      // 当前播放时间\n      curTime: 0,\n      // 是否显示跳过前奏按钮\n      jumpShow: false,\n      // store对象\n      // store: null,\n      // 音频文件的url格式\n      audioUrl: null,\n      curVal: [], // 当前选中的歌词行\n      // 正在倒计时\n      countingdown: false,\n      // 倒计时的点数\n      dotCount: 5,\n      // 是否需要显示倒计时\n      needCountdown: false,\n      // 什么时候显示倒计时\n      showCountdownTime: null,\n      // 是否正在滚动\n      scrolling: false,\n      // 播放状态\n      playing: false,\n      // 点击完成的时候如果没有播放完 弹出的提示框\n      fShow: false,\n      fShowList: [\n        { name: \"结束在当前位置\" },\n        { name: \"结束并保留之后的伴奏\" },\n      ],\n      // 录音对象\n      mediaRecorder: null,\n      // 空白音频\n      // blankAudioBuffer: null,\n      recordStarttime: 0,\n      // 设置窗口\n      settingShow: false,\n\n      // 音频上下文 用来升降调,声音增大\n      audioCtx: null,\n      // 升降调\n      pitchShift_banzou: null,\n      // 声音控制\n      gainNode_banzou: null,\n\n      // 音频分析器\n      analyser: null,\n      // 画布上下文\n      ctx: null,\n\n    };\n  },\n  mounted() {\n    // 取store对象\n   console.log(this.store);\n    // console.log(store.banzou);\n    if (!this.store.banzou) {\n      alert(\"请先选择伴奏文件\");\n      this.$router.replace(\"/\");\n      return;\n    }    \n    navigator.mediaDevices.getUserMedia({ audio: {\n      channelCount: 2,\n      sampleRate: 48000, //采样率，决定每秒采集的音频样本数量。\n      sampleSize: 16, // 每个音频样本的位深度，常用的为 16 位。\n      // 说这个参数如果设置为true就是单声道效果\n      echoCancellation: false,  // 回声消除，防止麦克风录入扬声器的声音。\n      noiseSuppression: false, // 噪声抑制，用于减少背景噪声。\n      autoGainControl: true, // 自动增益控制，调节音量使其保持在合理水平。\n    } })\n    .then(stream => {\n      this.initMediaRecorder(stream);\n\n      // 给标题赋值\n      this.musicName = this.store.banzou.name.replace(/\\.(mp3|wav)$/i, \"\");\n      // 清空录音列表\n      this.store.audioChunk = [];\n      this.connectAuido();\n      this.initAnalyser(stream);\n      // 读取歌词\n      if (this.store.lrc) {\n        this.store.readLrcText().then(() => {\n          // console.log(lrcText);\n          // this.columns = this.parseLRC(lrcText);\n          //this.lrcText = lrcText;\n          //this.parseLRC(this.lrcText);\n          if (this.store.parsedLyrics[0]) {\n            this.setCountdownTime(this.store.parsedLyrics[0].value);\n          }          \n          this.loadAudio();\n          // this.mediaRecorder.start();\n        });\n      } else {\n        this.loadAudio();\n        // this.mediaRecorder.start();\n      }      \n    }).catch(err => {\n      console.log(err);\n      alert(\"麦克风权限请求失败,无法进行录音\");\n    });\n \n  },\n  unmounted() {\n    if (this.audioUrl) {\n      URL.revokeObjectURL(this.audioUrl);\n      this.audioUrl = null;\n    }    \n    if (this.$refs.audio) {\n      this.$refs.audio.pause();\n      this.$refs.audio.src = \"\";\n    }\n    if(this.mediaRecorder){\n      this.mediaRecorder.stop();\n      this.mediaRecorder = null;\n    }\n    this.clearTimer();\n    // this.audioCtx = null;\n    // Tone.setContext(null);\n  },\n  watch: {\n    // 监视全局伴奏音量变化\n    \"store.banzouVolume\": {\n      handler() {\n        if (this.audioCtx) {\n          this.gainNode_banzou.gain.value = this.store.banzouVolume;\n          //this.gainNode_banzou.gain.setValueAtTime(0.5, this.audioCtx.currentTime);\n        }\n      },\n    },\n    //监视全局伴奏音调变化\n    \"store.banzouPitch\": {\n      handler() {\n        if (this.audioCtx) {\n          this.pitchShift_banzou.pitch = this.store.banzouPitch;\n          // this.pitchShift_banzou.set({ pitch: 2 });\n        }\n      },\n    },    \n  },\n  methods: {\n    test1() {\n      console.log(\"test1\" + this.store);\n    },\n    //创建一个波形分析图,麦克风有声音它就会有变化\n    initAnalyser(stream) {\n        const source = this.audioCtx.createMediaStreamSource(stream);\n        // 创建 AnalyserNode 用于音频数据分析\n        this.analyser = this.audioCtx.createAnalyser();\n        // fftSize 表示 FFT 计算的采样点数，它必须是 32 到 32768 之间的 2 的幂（如 32、64、128、256、512、1024、2048 等）。\n        // fftSize 值越大，频率分辨率越高，也就是说可以更精细地分析频率成分，但会占用更多的计算资源。\n        this.analyser.fftSize = 2048; // 设置 FFT 大小  默认就是2048\n        source.connect(this.analyser);\n        let cvs = this.$refs.waveBox;\n        this.ctx = cvs.getContext(\"2d\");\n        this.drawWaveform();\n    },\n    // 绘制波形\n    drawWaveform() {\n        const bufferLength = this.analyser.fftSize;\n        const dataArray = new Uint8Array(bufferLength);\n        let canvas = this.$refs.waveBox;\n        let canvasCtx = this.ctx;\n        let draw = ()=> {\n            // 获取当前音频数据\n            this.analyser.getByteTimeDomainData(dataArray);\n\n            // 清除画布\n            canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // 设置波形线条样式\n            canvasCtx.lineWidth = 1.5;\n            canvasCtx.strokeStyle = '#e4310d';\n\n            // 开始绘制波形\n            canvasCtx.beginPath();\n            const sliceWidth = canvas.width * 1.0 / bufferLength;\n            let x = 0;\n\n            for (let i = 0; i < bufferLength; i++) {\n                const v = dataArray[i] / 128.0;\n                const y = v * canvas.height / 2;\n\n                if (i === 0) {\n                    canvasCtx.moveTo(x, y);\n                } else {\n                    canvasCtx.lineTo(x, y);\n                }\n\n                x += sliceWidth;\n            }\n\n            canvasCtx.lineTo(canvas.width, canvas.height / 2);\n            canvasCtx.stroke();\n\n            // 持续绘制下一帧\n            this.animationId = requestAnimationFrame(draw);\n        }\n\n        draw(); // 启动绘制\n    },    \n    // 目前就是检查一下 看看是否需要显示跳过前奏按钮\n    checkQianzouLength() {\n      if(!this.store.parsedLyrics || !this.store.parsedLyrics.length) {\n        return;\n      }\n      if(this.store.parsedLyrics[0].time > 10) {\n        this.jumpShow = true;\n      }\n    },\n    jumpToSing() {\n      let time = this.store.parsedLyrics[0].value;\n      this.curVal = [time];\n      this.onChange({ selectedValues: [time]});\n      this.changeTime();\n      this.jumpShow = false;\n    },\n    clearTimer() {\n      clearTimeout(this.cdTimer);\n      clearTimeout(this.delayTimer);\n      clearTimeout(this.touchEndTimer);\n      cancelAnimationFrame(this.animationId);\n    },\n    onSetting() {\n      this.settingShow = true;\n    },\n    //设置歌词迟延时间\n    // onlrcDelayChange(v) {\n    //   this.parseLRC(this.lrcText);\n    // },\n    setMediaRecorder() {\n      this.mediaRecorder.ondataavailable = event => {\n        console.log(event.data)\n        if(!this.$refs.audio) {\n          return;\n        }\n        this.store.audioChunk.push({\n          start: this.recordStarttime,\n          end: this.$refs.audio.currentTime,\n          blob: event.data\n        });\n        console.log(this.store.audioChunk)\n      };\n    },\n    initMediaRecorder(stream) {\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.setMediaRecorder();\n      // console.log(this.mediaRecorder.resume);\n      // mediaRecorder.start();\n      // this.recordChunks = [];\n\n\n      // this.mediaRecorder.onstop = () => {\n        // const blob = new Blob(this.recordChunks, { 'type': 'audio/ogg; codecs=opus' });\n        // // 保存录制的人声\n        // const voiceUrl = URL.createObjectURL(blob);\n        // const a = document.createElement('a');\n        // a.href = voiceUrl;\n        // a.download = 'vocal.ogg';\n        // document.body.appendChild(a);\n        // a.click();\n      // };\n\n      // // 在适当的时候停止录音\n      // setTimeout(() => {\n      //   mediaRecorder.stop();\n      // }, 15000); // 录音5秒\n    },\n    removeRecordedSegmentsAfter(time) {\n      // 删除在指定时间之后的录音片段\n      this.store.audioChunk = this.store.audioChunk.filter(segment => segment.start < time);\n    },  \n    //创建空白音频 用户自己拖动歌词的时候会把它前面的部分填充空白的音频\n    createSilentAudio(duration) {\n      // 生成指定时长的空白音频\n      const audioCtx =  this.audioCtx; //this.audioContext || (this.audioContext = new AudioContext());\n      const channels = 2;\n      const frameCount = audioCtx.sampleRate * duration;\n      const silentBuffer = audioCtx.createBuffer(channels, frameCount, audioCtx.sampleRate);\n      return silentBuffer;\n    },      \n    // 歌词列表的一些样式逻辑 它自己滚动 如果有手按住了就停止,手放开就继续\n    getCurClass(){\n      let sText = [];\n      if(this.dotCount <= 0 ) {\n        sText.push('c-start-sing')\n      }\n      if(this.scrolling){\n        sText.push('c-picker-scrolling')\n      }\n      return sText.join(' ');\n    },\n    // 手按住\n    onTouchStart(){\n      if (this.countingdown || !this.playing) {\n        return;\n      }\n      console.log(\"onTouchStart\");\n      if(this.touchEndTimer) {\n        clearTimeout(this.touchEndTimer);\n        this.touchEndTimer = null;\n      }\n      else {\n        // 没有touchEndTimer 说明是第一次按下 记录一下当前时间\n        this.touchTime = this.$refs.audio.currentTime;\n      }\n      this.scrolling = true;\n    },\n    // 手放开\n    onTouchEnd(){\n      if (this.countingdown || !this.playing) {\n        return;\n      }\n      console.log(\"will onTouchEnd\");\n      this.touchEndTimer = setTimeout(() => {\n        console.log(\"onTouchEnd\");\n        this.scrolling = false;\n        this.touchEndTimer = null;\n        this.changeTime();\n        // todo 在这把onchange的代码挪过来一些\n      }, 500);\n    },\n    // setRecordAudio(touchTime, nextTime) {\n    //   if(nextTime > touchTime) {\n    //     let buffer = this.createSilentAudio(nextTime - touchTime);\n    //     this.store.audioChunk.push({\n    //       end: nextTime,\n    //       blob: buffer.getChannelData(0)\n    //     });\n    //     console.log(\"chunk \", this.store.audioChunk);\n    //   }\n    // },\n    // 加载音频\n    loadAudio() {\n      this.audioUrl = window.URL.createObjectURL(this.store.banzou);\n      this.$refs.audio.src = this.audioUrl;\n    },\n    onLoadedMetadata() {\n      this.store.banzouLength = this.$refs.audio.duration;\n      this.mediaRecorder.start();\n      this.$refs.audio.play();\n      this.playing = true;\n      this.checkQianzouLength();\n    },\n\n    // connect audio\n    connectAuido() {\n      var audioCtx = new (window.AudioContext || window.webkitAudioContext);\n      var mediaElem = this.$refs.audio;\n      var stream = audioCtx.createMediaElementSource(mediaElem);\n      var gainNode = audioCtx.createGain();\n\n      // This a normal connection between to native AudioNodes.\n      stream.connect(gainNode);\n\n      // Set the context used by Tone.js\n      Tone.setContext(audioCtx);\n      gainNode.gain.value = this.store.banzouVolume;\n\n      var pitchShift = new Tone.PitchShift();\n      pitchShift.pitch = this.store.banzouPitch;\n      // Use the Tone.connect() helper to connect native AudioNodes with the nodes provided by Tone.js\n      Tone.connect(gainNode, pitchShift);\n      Tone.connect(pitchShift, audioCtx.destination);\n\n      this.audioCtx = audioCtx;\n      this.gainNode_banzou = gainNode;\n      // console.log(11111,Tone)\n      this.pitchShift_banzou = pitchShift;\n    },\n\n    // 读取歌词-- 放到store里面去读取了 而且增加了编码格式的参数 这个目前不用了\n    // readText() {\n    //   return new Promise((rs) => {\n    //     let fr = new FileReader();\n    //     fr.onload = (e) => {\n    //       rs(e.target.result);\n    //     };\n    //     fr.readAsText(this.store.lrc, \"GBK\");\n    //   });\n    // },\n    \n    // 后退\n    onBack() {\n      this.$router.replace(\"/\");\n    },\n    // // js解析歌词\n    // parseLRC(lrcContent) {\n    //   const lines = lrcContent.split(/[\\r\\n]/);\n    //   const timeExp = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/; // 匹配时间戳 [mm:ss.xx]\n    //   const lyricsList = [];\n\n    //   lines.forEach((line) => {\n    //     const match = timeExp.exec(line);\n    //     if (match) {\n    //       const minutes = parseInt(match[1], 10);\n    //       const seconds = parseInt(match[2], 10);\n    //       let milliseconds = parseInt(match[3], 10);\n    //       milliseconds = match[3].length > 2 ? parseInt(match[3], 10) / 1000 : parseInt(match[3], 10) / 100;\n    //       const timeInSeconds = minutes * 60 + seconds + milliseconds;\n\n    //       const lyricText = line.replace(timeExp, \"\").trim();\n\n    //       // 将歌词转换为Picker需要的格式\n    //       lyricsList.push({\n    //         text: lyricText,\n    //         value: timeInSeconds + this.store.lrcDelayTime,\n    //         time: timeInSeconds + this.store.lrcDelayTime,\n    //       });\n    //     }\n    //   });\n\n    //   this.store.parsedLyrics = lyricsList;\n    // },\n    \n    // 设置演唱倒计时\n    setCountdownTime(n) {\n      if (n < 5) {\n        this.showCountdownTime = 0;\n      } else {\n        this.showCountdownTime = n - 5;\n      }\n      this.needCountdown = true;\n    },\n    // 暂停\n    onPause() {\n      if(this.countingdown){\n        return;\n      }\n      this.$refs.audio.pause();\n      this.mediaRecorder.pause();\n      this.playing = false;\n    },\n    // 播放\n    onPlay(){\n      if(this.countingdown){\n        return;\n      }      \n      this.$refs.audio.play();\n      this.mediaRecorder.resume();\n      this.playing = true;\n    },\n    // 播放进度更新\n    onTimeUpdate() {\n      const audio = this.$refs.audio;\n      if (!audio) {\n        return;\n      }\n      this.curTime = audio.currentTime;\n      \n      if (this.countingdown || this.scrolling) {\n        return;\n      }\n      console.log(\"---------onTimeUpdate\");\n\n      const currentTime = audio.currentTime;\n     // console.log(currentTime);\n     // 如果需要倒计时, 并且当前时间大于显示倒计时的时间(需要倒计时但不一定一开始就显示出来,比如有前凑,在快要开始唱的时候才开始倒计时)\n      if (this.needCountdown && currentTime >= this.showCountdownTime) {\n        this.jumpShow = false;\n        let n = currentTime - this.showCountdownTime; // 回调函数的时间可能会比显示倒计时的时间晚了一点,所以需要计算一下 比如现在多了0.3秒\n        let m = Math.floor(n); // 向下取整为0 \n        let delay = 1000 - 1000 * (n - m);  // 计算延时就是 多了的300毫秒 再用1000减去她, 这样后面倒计时就是整秒数\n        this.dotCount = Math.floor(5 - (n - m)); // 5秒倒计时 就要减去0.3秒 然后再去整 这样方便显示小圆点\n        // 如果倒计时已经过了,就不显示了\n        if (this.dotCount < 0) {\n          this.dotCount = 0;\n          this.needCountdown = false;\n          return;\n        }\n        this.countingdown = true;\n        this.delayTimer = setTimeout(() => {\n          this.countdown().then(()=> {\n            // 不延时 字幕会先网上滚动\n            //setTimeout(() => {\n              this.countingdown = false;\n              if(this.mediaRecorder.state !== \"recording\") {\n                this.mediaRecorder.start();\n                this.recordStarttime = this.$refs.audio.currentTime;\n                // 去掉之后的录音\n                this.removeRecordedSegmentsAfter(this.recordStarttime);\n              }\n            //}, 300);\n          });\n        }, delay);\n        this.needCountdown = false;\n        return;\n      }\n      if(this.countingdown){\n        return;\n      }\n      // 查找当前播放时间对应的歌词行\n      for (let i = 0; i < this.store.parsedLyrics.length; i++) {\n        if (\n          currentTime >= this.store.parsedLyrics[i].time &&\n          (i === this.store.parsedLyrics.length - 1 ||\n            currentTime < this.store.parsedLyrics[i + 1].time)\n        ) {\n          this.curVal = [this.store.parsedLyrics[i].value]; // 自动滚动到当前歌词行\n          break;\n        }\n      }\n    },\n\n    // 用手滑动后的事件, 歌曲比手滑动的位置稍微往前一点 此时歌词不动, 歌曲演唱, 到了手滑动的位置歌词才开始滚动\n    onChange({ selectedValues }) {\n      // if(this.changeTimer) {\n      //   clearTimeout(this.changeTimer);\n      //   this.changeTimer = null;\n      // }\n      //调用stop 这样会触发ondataavailable 事件, 之前的录音会被记录到数组\n      // this.mediaRecorder.stop();\n      //this.changeTimer = setTimeout(() => {\n        // if(this.scrolling){\n        //   return;\n        // }\n        // console.log(\"stop\")\n        // //showToast(`当前值: ${selectedValues.join(\",\")}`);\n        // //this.setRecordAudio(this.touchTime, selectedValues[0])\n\n        // // this.touchTime = null;\n        // let n = selectedValues[0] - 5;\n        // if(n < 0){\n        //   n = 0;\n        // }\n        // this.$refs.audio.currentTime = n;\n        // this.setCountdownTime(selectedValues[0]);\n      //}, 500);\n      if(this.mediaRecorder.state === \"recording\") {\n        this.mediaRecorder.stop();\n      }\n      this.valueChangeTime = selectedValues[0];\n\n    },\n\n    changeTime() {\n      if(this.scrolling || !this.valueChangeTime){\n        return;\n      }\n      //console.log(\"stop\")\n      //showToast(`当前值: ${selectedValues.join(\",\")}`);\n      //this.setRecordAudio(this.touchTime, selectedValues[0])\n\n      // this.touchTime = null;\n      // 播放时间减去五秒, 也就是你切换到的地方, 再往回五秒开始播放\n      let n = this.valueChangeTime - 5;\n      if(n < 0){\n        n = 0;\n      }\n      console.log(\"n-> \", n);\n      this.$refs.audio.currentTime = n;\n      this.setCountdownTime(this.valueChangeTime);\n      this.valueChangeTime = null;\n    },\n\n    // 倒计时函数\n    countdown() {\n      // this.dotCount = n;\n      return new Promise((rs) => {\n        this.countingdown = true;\n        let fun = () => {\n          if (this.dotCount > 0) {\n            this.cdTimer = setTimeout(() => {\n              this.dotCount--;\n              fun();\n            }, 1000);\n          } else {\n            rs();\n          }\n        };\n        fun();\n      });\n    },\n    // 重录按钮\n    onReplay() {\n      if(this.countingdown == true) {\n        return;\n      }\n      showConfirmDialog({\n        title: '提示',\n        message:'是否要重录?',\n      }).then(() => {\n        this.doReplay();\n      })\n      .catch(() => {\n        // on cancel\n      });\n    },\n    // 重录函数\n    doReplay() {\n      this.clearTimer();\n      this.$refs.audio.pause();\n      this.$refs.audio.currentTime = 0;\n      this.countingdown = false;\n      this.dotCount = 5;\n      this.valueChangeTime = null;\n      this.showCountdownTime = null;\n      if(this.store.lrc && this.store.parsedLyrics.length) {\n        this.curVal = [this.store.parsedLyrics[0].value]\n        //this.needCountdown = true;\n        this.setCountdownTime(this.store.parsedLyrics[0].value);\n      }\n      \n      // 先把回调函数弄成空函数 这样调用stop的时候就不会触发原来的回调函数\n      // 但是不一定是马上触发,所以要测试一下\n      this.mediaRecorder.ondataavailable = ()=>{};\n      this.mediaRecorder.stop();\n      this.setMediaRecorder();\n      this.recordStarttime = 0;\n      this.store.audioChunk = [];\n      this.mediaRecorder.start();\n      this.drawWaveform();\n      this.$refs.audio.play();\n      this.playing = true;\n      this.checkQianzouLength();\n    },\n    // 结束播放事件\n    onFinish() {\n      if(this.countingdown == true) {\n        return;\n      }      \n      console.log('onFinish');\n      if(this.$refs.audio.paused) {\n        this.isAlreadyPaused = true;\n      }\n      else {\n        this.$refs.audio.pause();\n        this.isAlreadyPaused = false;\n      }\n      // 录音程序停止\n      this.fShow = true;\n    },\n    finish() {\n      console.log('finish');\n      this.$refs.audio.pause();\n      // stop后马上就跳转 是否影响 onavailable的触发?? 待测试\n      this.mediaRecorder.stop();\n      setTimeout(() => {\n        this.$router.push({\n          path: '/edit',\n        });\n      }, 50);\n\n    },\n    onFshowCancel() {\n      this.fShow = false;\n      // 如果用户先点了暂停 再点的完成 如何提示.... 要不就不处理了...\n      if(!this.isAlreadyPaused) {\n        this.$refs.audio.play();\n      }\n    },\n    onFshowSelect(action, index) {\n      console.log(action, index);\n      // 如果选了从当前位置结束 让this.store.recordLength = this.$refs.audio.currentTime;\n      if(index == 0) {\n        this.store.recordLength = this.$refs.audio.currentTime;\n      }\n      else if(index == 1) { // 必须写这个判断, 否则第二次如果选了保留后面的 就出错了\n        this.store.recordLength = 0;\n      }\n      this.finish();\n      \n    }\n  },\n};\n</script>\n<style scoped>\n.c-ctrlbox {\n  margin: 30px auto 0;\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #1568c6;\n}\n.c-ctrlicon-big {\n  font-size: 50px;\n  color: #e4310d;\n}\n.c-ctrlicon {\n  font-size: 26px;\n}\n.c-ctrlitem {\n  text-align: center;\n}\n.c-ctrlitem span {\n  font-size: 12px;\n  display: block;\n}\n.c-lrcbox {\n  position: relative;\n}\n.c-cd-dotbox {\n  position: absolute;\n  width: 70px;\n  height: 10px;\n  top: 24vh;\n  left: 50%;\n  transform: translate(-50%, 0);\n  color: #e4310d;\n  z-index: 2000;\n  text-align: left;\n}\n.c-cd-dotitem {\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: #1089c1;\n  margin-right: 4px;\n}\n.c-timebox {\n  margin-top: 6px;\n}\n.c-jump-btn {\n  margin-top: 10px;\n  height: 34px;\n  line-height: 34px;\n  border: solid 1px #f39b9b;\n  background-color: #f1c7c7;\n  color: #e64141;\n}\n.c-re-wave {\n  /* border-bottom: solid 1px #f03737; */\n  /* 灰色横线 */  /* 白色底 */\n  /* background:  linear-gradient(transparent, #cccccc 1px, transparent 1px), white;  */\n  background-color: #FFFFFF;\n  background-size: 100% 8px; /* 每隔20px出现一条线 */  \n  position: absolute;\n  top: 46px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  z-index: 99;\n}\n</style>\n","import { render } from \"./RecordView.vue?vue&type=template&id=f2fbb144&scoped=true\"\nimport script from \"./RecordView.vue?vue&type=script&lang=js\"\nexport * from \"./RecordView.vue?vue&type=script&lang=js\"\n\nimport \"./RecordView.vue?vue&type=style&index=0&id=f2fbb144&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f2fbb144\"]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_van_dialog","show","$setup","isVisible","_cache","$event","title","onClose","onCloseDialog","default","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_van_cell","value","store","lrcDelayTime","_hoisted_2","_component_van_slider","modelValue","onChange","$options","onlrcDelayChange","min","max","step","_hoisted_3","_component_van_radio_group","lrcEncoding","direction","onLrcEncodingChange","_component_van_radio","name","_createTextVNode","_","banzouVolume","_hoisted_4","onBanzouVolumeChange","banzouPitch","_hoisted_5","onBanzouPitchChange","props","visible","type","Boolean","emits","setup","emit","useStore","ref","watch","newVal","console","log","methods","val","this","parseLRC","readLrcText","__exports__","render","width","height","_createElementBlock","_Fragment","_component_van_nav_bar","$data","musicName","onClickLeft","onBack","onClickRight","onSetting","onTimeupdate","args","onTimeUpdate","style","onEnded","finish","onLoadedmetadata","onLoadedMetadata","_component_van_picker","onTouchstart","onTouchStart","onTouchend","onTouchEnd","_normalizeClass","getCurClass","columns","parsedLyrics","curVal","readonly","countingdown","playing","_renderList","dotCount","n","key","onClick","onReplay","_component_van_icon","_hoisted_6","_hoisted_7","onPause","onPlay","onFinish","_hoisted_8","_hoisted_9","_toDisplayString","util","convertTime","curTime","banzouLength","_component_van_button","plain","jumpToSing","jumpShow","_hoisted_10","_component_van_action_sheet","fShow","actions","fShowList","onSelect","onFshowSelect","onCancel","onFshowCancel","_component_SettingDialog","settingShow","components","SettingDialog","data","audioUrl","needCountdown","showCountdownTime","scrolling","mediaRecorder","recordStarttime","audioCtx","pitchShift_banzou","gainNode_banzou","analyser","ctx","mounted","banzou","alert","$router","replace","navigator","mediaDevices","getUserMedia","audio","channelCount","sampleRate","sampleSize","echoCancellation","noiseSuppression","autoGainControl","then","stream","initMediaRecorder","audioChunk","connectAuido","initAnalyser","lrc","setCountdownTime","loadAudio","catch","err","unmounted","URL","revokeObjectURL","$refs","pause","src","stop","clearTimer","handler","gain","pitch","test1","source","createMediaStreamSource","createAnalyser","fftSize","connect","cvs","waveBox","getContext","drawWaveform","bufferLength","dataArray","Uint8Array","canvas","canvasCtx","draw","getByteTimeDomainData","clearRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","animationId","requestAnimationFrame","checkQianzouLength","length","time","selectedValues","changeTime","clearTimeout","cdTimer","delayTimer","touchEndTimer","cancelAnimationFrame","setMediaRecorder","ondataavailable","event","push","start","end","currentTime","blob","MediaRecorder","removeRecordedSegmentsAfter","filter","segment","createSilentAudio","duration","channels","frameCount","silentBuffer","createBuffer","sText","join","touchTime","setTimeout","window","createObjectURL","play","AudioContext","webkitAudioContext","mediaElem","createMediaElementSource","gainNode","createGain","Tone","setContext","pitchShift","PitchShift","destination","resume","m","Math","floor","delay","countdown","state","valueChangeTime","Promise","rs","fun","showConfirmDialog","message","doReplay","paused","isAlreadyPaused","path","action","index","recordLength"],"sourceRoot":""}